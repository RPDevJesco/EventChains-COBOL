IDENTIFICATION DIVISION.
PROGRAM-ID. EVENTCHAINS-BANKING.
AUTHOR. CLAUDE AND THE EVENTCHAINS PATTERN.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
SOURCE-COMPUTER. MODERN-MAINFRAME.
OBJECT-COMPUTER. MODERN-MAINFRAME.

DATA DIVISION.
WORKING-STORAGE SECTION.

*> EVENT CONTEXT - Shared state that flows through the chain
01  WS-EVENT-CONTEXT.
    05  WS-ACCOUNT-NUMBER            PIC 9(10) VALUE 1234567890.
    05  WS-ACCOUNT-HOLDER            PIC X(40)
        VALUE 'JOHN DOE'.
    05  WS-CURRENT-BALANCE           PIC 9(7)V99 VALUE 1000.00.
    05  WS-TRANSACTION-AMOUNT        PIC 9(7)V99 VALUE 0.
    05  WS-TRANSACTION-TYPE          PIC X(10) VALUE SPACES.
    05  WS-MINIMUM-BALANCE           PIC 9(7)V99 VALUE 100.00.
    05  WS-INTEREST-RATE             PIC 9V9999 VALUE 0.0350.
    05  WS-TRANSACTION-FEE           PIC 9(3)V99 VALUE 2.50.
           
*> EVENT RESULTS - Status tracking for each event
01  WS-EVENT-RESULT.
    05  WS-EVENT-SUCCESS             PIC X VALUE 'Y'.
        88  EVENT-SUCCESS            VALUE 'Y'.
        88  EVENT-FAILURE            VALUE 'N'.
    05  WS-ERROR-MESSAGE             PIC X(80) VALUE SPACES.
    05  WS-CURRENT-EVENT-NAME        PIC X(30) VALUE SPACES.

*> MIDDLEWARE STATE - Logging and timing information
01  WS-MIDDLEWARE-STATE.
    05  WS-LOG-ENABLED               PIC X VALUE 'Y'.
        88  LOGGING-ON               VALUE 'Y'.
        88  LOGGING-OFF              VALUE 'N'.
    05  WS-TIMING-ENABLED            PIC X VALUE 'Y'.
        88  TIMING-ON                VALUE 'Y'.
        88  TIMING-OFF               VALUE 'N'.
    05  WS-VALIDATION-ENABLED        PIC X VALUE 'Y'.
        88  VALIDATION-ON            VALUE 'Y'.
        88  VALIDATION-OFF           VALUE 'N'.
    05  WS-EVENT-START-TIME          PIC 9(8).
    05  WS-EVENT-END-TIME            PIC 9(8).
    05  WS-EVENT-DURATION            PIC 9(6).

*> EVENT EXECUTION STATE
01  WS-EVENTCHAIN-STATE.
    05  WS-EVENTCHAIN-SUCCESS        PIC X VALUE 'Y'.
        88  EVENTCHAIN-SUCCESS       VALUE 'Y'.
        88  EVENTCHAIN-FAILURE       VALUE 'N'.
    05  WS-FAULT-TOLERANCE-MODE      PIC X VALUE 'S'.
        88  STRICT-MODE              VALUE 'S'.
        88  LENIENT-MODE             VALUE 'L'.
        88  BEST-EFFORT-MODE         VALUE 'B'.
    05  WS-EVENTS-EXECUTED           PIC 9(3) VALUE 0.
    05  WS-EVENTS-FAILED             PIC 9(3) VALUE 0.

*> DISPLAY FORMATTING
01  WS-DISPLAY-LINE                  PIC X(70) VALUE ALL '='.
01  WS-DISPLAY-EMPTY                 PIC X(70) VALUE SPACES.
01  WS-TEMP-BALANCE                  PIC 9(7)V99 VALUE 0.

PROCEDURE DIVISION.

*> MAIN EVENT EXECUTION - This is our EventChain Execute method
0000-MAIN-EVENTCHAIN.
    DISPLAY WS-DISPLAY-LINE.
    DISPLAY '  EVENTCHAINS PATTERN - COBOL BANKING DEMO'.
    DISPLAY WS-DISPLAY-LINE.
    DISPLAY ' '.

    DISPLAY 'Account: ' WS-ACCOUNT-HOLDER.
    DISPLAY 'Account Number: ' WS-ACCOUNT-NUMBER.
    DISPLAY 'Initial Balance: $' WS-CURRENT-BALANCE.
    DISPLAY ' '.
    DISPLAY WS-DISPLAY-LINE.
    DISPLAY ' '.

    *> Initialize execution state
    MOVE 'Y' TO WS-EVENTCHAIN-SUCCESS.
    MOVE 0 TO WS-EVENTS-EXECUTED.
    MOVE 0 TO WS-EVENTS-FAILED.

    *> TRANSACTION 1: DEPOSIT
    DISPLAY '>>> TRANSACTION 1: DEPOSIT $500.00'.
    MOVE 500.00 TO WS-TRANSACTION-AMOUNT.
    MOVE 'DEPOSIT' TO WS-TRANSACTION-TYPE.
    PERFORM 1000-EXECUTE-DEPOSIT-EVENTCHAIN.

    DISPLAY ' '.

    *> TRANSACTION 2: WITHDRAWAL
    DISPLAY '>>> TRANSACTION 2: WITHDRAW $200.00'.
    MOVE 200.00 TO WS-TRANSACTION-AMOUNT.
    MOVE 'WITHDRAWAL' TO WS-TRANSACTION-TYPE.
    PERFORM 2000-EXECUTE-WITHDRAWAL-EVENTCHAIN.

    DISPLAY ' '.

    *> TRANSACTION 3: APPLY INTEREST
    DISPLAY '>>> TRANSACTION 3: APPLY MONTHLY INTEREST'.
    PERFORM 3000-EXECUTE-INTEREST-EVENTCHAIN.

    DISPLAY ' '.
    DISPLAY WS-DISPLAY-LINE.
    DISPLAY 'FINAL ACCOUNT SUMMARY'.
    DISPLAY WS-DISPLAY-LINE.
    DISPLAY 'Account Holder: ' WS-ACCOUNT-HOLDER.
    DISPLAY 'Final Balance: $' WS-CURRENT-BALANCE.
    DISPLAY 'Total Transactions Executed: ' WS-EVENTS-EXECUTED.
    DISPLAY 'Total Transactions Failed: ' WS-EVENTS-FAILED.
           
    IF EVENTCHAIN-SUCCESS
        DISPLAY 'Status: SUCCESS'
    ELSE
        DISPLAY 'Status: FAILURE'
    END-IF.

    DISPLAY WS-DISPLAY-LINE.
    STOP RUN.

*> DEPOSIT TRANSACTION EVENT SEQUENCE
1000-EXECUTE-DEPOSIT-EVENTCHAIN.
    DISPLAY 'Executing Deposit EventChain...'.
    DISPLAY ' '.

    *> Event 1: Validate Transaction
    MOVE 'ValidateTransaction' TO WS-CURRENT-EVENT-NAME.
    PERFORM 9100-MIDDLEWARE-WRAPPER.
    IF EVENT-FAILURE
        PERFORM 9900-HANDLE-EVENT-FAILURE
        GO TO 1000-EVENTCHAIN-END
    END-IF.

    *> Event 2: Process Deposit
    MOVE 'ProcessDeposit' TO WS-CURRENT-EVENT-NAME.
    PERFORM 9100-MIDDLEWARE-WRAPPER.
    IF EVENT-FAILURE
        PERFORM 9900-HANDLE-EVENT-FAILURE
        GO TO 1000-EVENTCHAIN-END
    END-IF.

    *> Event 3: Apply Transaction Fee
    MOVE 'ApplyTransactionFee' TO WS-CURRENT-EVENT-NAME.
    PERFORM 9100-MIDDLEWARE-WRAPPER.
    IF EVENT-FAILURE
        PERFORM 9900-HANDLE-EVENT-FAILURE
        GO TO 1000-EVENTCHAIN-END
    END-IF.

    *> Event 4: Log Transaction
    MOVE 'LogTransaction' TO WS-CURRENT-EVENT-NAME.
    PERFORM 9100-MIDDLEWARE-WRAPPER.

1000-EVENTCHAIN-END.
    EXIT.

*> WITHDRAWAL TRANSACTION EVENT SEQUENCE
2000-EXECUTE-WITHDRAWAL-EVENTCHAIN.
    DISPLAY 'Executing Withdrawal EventChain...'.
    DISPLAY ' '.

    *> Event 1: Validate Transaction
    MOVE 'ValidateTransaction' TO WS-CURRENT-EVENT-NAME.
    PERFORM 9100-MIDDLEWARE-WRAPPER.
    IF EVENT-FAILURE
        PERFORM 9900-HANDLE-EVENT-FAILURE
        GO TO 2000-EVENTCHAIN-END
    END-IF.

    *> Event 2: Check Sufficient Balance
    MOVE 'CheckBalance' TO WS-CURRENT-EVENT-NAME.
    PERFORM 9100-MIDDLEWARE-WRAPPER.
    IF EVENT-FAILURE
        PERFORM 9900-HANDLE-EVENT-FAILURE
        GO TO 2000-EVENTCHAIN-END
    END-IF.

    *> Event 3: Process Withdrawal
    MOVE 'ProcessWithdrawal' TO WS-CURRENT-EVENT-NAME.
    PERFORM 9100-MIDDLEWARE-WRAPPER.
    IF EVENT-FAILURE
        PERFORM 9900-HANDLE-EVENT-FAILURE
        GO TO 2000-EVENTCHAIN-END
    END-IF.

    *> Event 4: Apply Transaction Fee
    MOVE 'ApplyTransactionFee' TO WS-CURRENT-EVENT-NAME.
    PERFORM 9100-MIDDLEWARE-WRAPPER.
    IF EVENT-FAILURE
        PERFORM 9900-HANDLE-EVENT-FAILURE
        GO TO 2000-EVENTCHAIN-END
    END-IF.

    *> Event 5: Log Transaction
    MOVE 'LogTransaction' TO WS-CURRENT-EVENT-NAME.
    PERFORM 9100-MIDDLEWARE-WRAPPER.

2000-EVENTCHAIN-END.
    EXIT.

*> INTEREST APPLICATION EVENT SEQUENCE
3000-EXECUTE-INTEREST-EVENTCHAIN.
    DISPLAY 'Executing Interest Application EventChain...'.
    DISPLAY ' '.

    *> Event 1: Calculate Interest
    MOVE 'CalculateInterest' TO WS-CURRENT-EVENT-NAME.
    PERFORM 9100-MIDDLEWARE-WRAPPER.
    IF EVENT-FAILURE
        PERFORM 9900-HANDLE-EVENT-FAILURE
        GO TO 3000-EVENTCHAIN-END
    END-IF.

    *> Event 2: Apply Interest
    MOVE 'ApplyInterest' TO WS-CURRENT-EVENT-NAME.
    PERFORM 9100-MIDDLEWARE-WRAPPER.
    IF EVENT-FAILURE
        PERFORM 9900-HANDLE-EVENT-FAILURE
        GO TO 3000-EVENTCHAIN-END
    END-IF.

    *> Event 3: Log Transaction
    MOVE 'LogTransaction' TO WS-CURRENT-EVENT-NAME.
    PERFORM 9100-MIDDLEWARE-WRAPPER.

3000-EVENTCHAIN-END.
    EXIT.

*> MIDDLEWARE WRAPPER - Wraps each event execution
9100-MIDDLEWARE-WRAPPER.
    *> Pre-execution middleware (outermost to innermost)
    IF LOGGING-ON
        PERFORM 9110-LOG-EVENT-START
    END-IF.
           
    IF TIMING-ON
        PERFORM 9120-START-TIMER
    END-IF.
           
    IF VALIDATION-ON
        PERFORM 9130-VALIDATE-CONTEXT
        IF EVENT-FAILURE
            GO TO 9100-MIDDLEWARE-END
        END-IF
    END-IF.
           
    *> CORE EVENT EXECUTION
    PERFORM 9200-DISPATCH-EVENT.
           
    *> Post-execution middleware (innermost to outermost)
    IF TIMING-ON
        PERFORM 9125-STOP-TIMER
    END-IF.
           
    IF LOGGING-ON
        PERFORM 9115-LOG-EVENT-END
    END-IF.

9100-MIDDLEWARE-END.
    EXIT.

*> MIDDLEWARE: Logging (Pre-execution)
9110-LOG-EVENT-START.
    DISPLAY '  [LOG] Starting event: ' WS-CURRENT-EVENT-NAME.
    EXIT.

*> MIDDLEWARE: Logging (Post-execution)
9115-LOG-EVENT-END.
    IF EVENT-SUCCESS
        DISPLAY '  [LOG] Event completed: '
            WS-CURRENT-EVENT-NAME
    ELSE
        DISPLAY '  [LOG] Event failed: '
            WS-CURRENT-EVENT-NAME
        DISPLAY '  [LOG] Error: ' WS-ERROR-MESSAGE
    END-IF.
    EXIT.

*> MIDDLEWARE: Timing (Start)
9120-START-TIMER.
    ACCEPT WS-EVENT-START-TIME FROM TIME.
    EXIT.

*> MIDDLEWARE: Timing (Stop)
9125-STOP-TIMER.
    ACCEPT WS-EVENT-END-TIME FROM TIME.
    COMPUTE WS-EVENT-DURATION = 
        WS-EVENT-END-TIME - WS-EVENT-START-TIME.
    DISPLAY '  [TIMING] Duration: ' 
        WS-EVENT-DURATION ' microseconds'.
    EXIT.

*> MIDDLEWARE: Validation
9130-VALIDATE-CONTEXT.
    IF WS-ACCOUNT-NUMBER = 0
        MOVE 'N' TO WS-EVENT-SUCCESS
        MOVE 'Invalid account number' TO WS-ERROR-MESSAGE
    END-IF.
    EXIT.

*> EVENT DISPATCHER - Routes to the appropriate event
9200-DISPATCH-EVENT.
    EVALUATE WS-CURRENT-EVENT-NAME
        WHEN 'ValidateTransaction'
            PERFORM 4100-VALIDATE-TRANSACTION
        WHEN 'CheckBalance'
            PERFORM 4200-CHECK-BALANCE
        WHEN 'ProcessDeposit'
            PERFORM 4300-PROCESS-DEPOSIT
        WHEN 'ProcessWithdrawal'
            PERFORM 4400-PROCESS-WITHDRAWAL
        WHEN 'ApplyTransactionFee'
            PERFORM 4500-APPLY-TRANSACTION-FEE
        WHEN 'CalculateInterest'
            PERFORM 4600-CALCULATE-INTEREST
        WHEN 'ApplyInterest'
            PERFORM 4700-APPLY-INTEREST
        WHEN 'LogTransaction'
            PERFORM 4800-LOG-TRANSACTION
        WHEN OTHER
            MOVE 'N' TO WS-EVENT-SUCCESS
            MOVE 'Unknown event' TO WS-ERROR-MESSAGE
    END-EVALUATE.

    ADD 1 TO WS-EVENTS-EXECUTED.
    EXIT.

*> EVENT: Validate Transaction
4100-VALIDATE-TRANSACTION.
    MOVE 'Y' TO WS-EVENT-SUCCESS.
    MOVE SPACES TO WS-ERROR-MESSAGE.

    IF WS-TRANSACTION-AMOUNT <= 0
        MOVE 'N' TO WS-EVENT-SUCCESS
        MOVE 'Transaction amount must be positive'
            TO WS-ERROR-MESSAGE
    END-IF.

    IF EVENT-SUCCESS
        DISPLAY '    -> Transaction validated'
    END-IF.
    EXIT.

*> EVENT: Check Sufficient Balance
4200-CHECK-BALANCE.
    MOVE 'Y' TO WS-EVENT-SUCCESS.
    MOVE SPACES TO WS-ERROR-MESSAGE.

    COMPUTE WS-TEMP-BALANCE = 
        WS-CURRENT-BALANCE - WS-TRANSACTION-AMOUNT
        - WS-TRANSACTION-FEE
    END-COMPUTE.

    IF WS-TEMP-BALANCE < WS-MINIMUM-BALANCE
        MOVE 'N' TO WS-EVENT-SUCCESS
        MOVE 'Insufficient funds' TO WS-ERROR-MESSAGE
    ELSE
        DISPLAY '    -> Sufficient balance confirmed'
    END-IF.
    EXIT.

*> EVENT: Process Deposit
4300-PROCESS-DEPOSIT.
    MOVE 'Y' TO WS-EVENT-SUCCESS.
    MOVE SPACES TO WS-ERROR-MESSAGE.

    ADD WS-TRANSACTION-AMOUNT TO WS-CURRENT-BALANCE.
    DISPLAY '    -> Deposited $' WS-TRANSACTION-AMOUNT.
    DISPLAY '    -> New balance: $' WS-CURRENT-BALANCE.
    EXIT.

*> EVENT: Process Withdrawal
4400-PROCESS-WITHDRAWAL.
    MOVE 'Y' TO WS-EVENT-SUCCESS.
    MOVE SPACES TO WS-ERROR-MESSAGE.

    SUBTRACT WS-TRANSACTION-AMOUNT FROM WS-CURRENT-BALANCE.
    DISPLAY '    -> Withdrew $' WS-TRANSACTION-AMOUNT.
    DISPLAY '    -> New balance: $' WS-CURRENT-BALANCE.
    EXIT.

*> EVENT: Apply Transaction Fee
4500-APPLY-TRANSACTION-FEE.
    MOVE 'Y' TO WS-EVENT-SUCCESS.
    MOVE SPACES TO WS-ERROR-MESSAGE.

    SUBTRACT WS-TRANSACTION-FEE FROM WS-CURRENT-BALANCE.
    DISPLAY '    -> Transaction fee: $' WS-TRANSACTION-FEE.
    DISPLAY '    -> Balance after fee: $' WS-CURRENT-BALANCE.
    EXIT.

*> EVENT: Calculate Interest
4600-CALCULATE-INTEREST.
    MOVE 'Y' TO WS-EVENT-SUCCESS.
    MOVE SPACES TO WS-ERROR-MESSAGE.

    *> Calculate monthly interest (annual rate divided by 12)
    COMPUTE WS-TRANSACTION-AMOUNT = 
        WS-CURRENT-BALANCE * (WS-INTEREST-RATE / 12)
    END-COMPUTE.

    DISPLAY '    -> Interest rate: ' 
        WS-INTEREST-RATE ' (annual)'.
    DISPLAY '    -> Interest earned: $' 
        WS-TRANSACTION-AMOUNT.
    EXIT.

*> EVENT: Apply Interest
4700-APPLY-INTEREST.
    MOVE 'Y' TO WS-EVENT-SUCCESS.
    MOVE SPACES TO WS-ERROR-MESSAGE.

    ADD WS-TRANSACTION-AMOUNT TO WS-CURRENT-BALANCE.
    DISPLAY '    -> Interest applied'.
    DISPLAY '    -> New balance: $' WS-CURRENT-BALANCE.
    EXIT.

*> EVENT: Log Transaction
4800-LOG-TRANSACTION.
    MOVE 'Y' TO WS-EVENT-SUCCESS.
    MOVE SPACES TO WS-ERROR-MESSAGE.

    DISPLAY '    -> Transaction logged to audit trail'.
    EXIT.

*> ERROR HANDLER - Called when an event fails
9900-HANDLE-EVENT-FAILURE.
    ADD 1 TO WS-EVENTS-FAILED.
    MOVE 'N' TO WS-EVENTCHAIN-SUCCESS.

    DISPLAY '  [ERROR] Event failed: ' WS-CURRENT-EVENT-NAME.
    DISPLAY '  [ERROR] Message: ' WS-ERROR-MESSAGE.
    DISPLAY ' '.

    IF STRICT-MODE
        DISPLAY '  [INFO] STRICT MODE: Halting execution'
    END-IF.

    EXIT.